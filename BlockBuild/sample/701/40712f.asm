.section .data
data_items:
 	.long 23333
 	.long 66666
 	.string
 .section .text
.globl _start
_start:
	mov $0, %r11
	mov $0, %rdi          # move 0 into the index register          # move 0 into the index register
 	mov $0x60094d, %r10
mov $0x0, %r9 # load the first byte of data
start_loop_1:             # start loop
 	inc %rdi
 	cmp  $214748364, %rdi          # check to see if we have hit the end
 	je again

mov	%rdx,%rax
movslq	%r10d,%r8
shl	$0x8,%rax
lea	(%r10,%r11,1),%rcx
lea	(%r10,%r11,1),%rax
movzwl	(%r10,%r11,1),%edx
lea	0x782(%r10),%esi
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
mov	%rdx,%rax
movslq	%r10d,%r8
shl	$0x8,%rax
lea	(%r10,%r11,1),%rcx
lea	(%r10,%r11,1),%rax
movzwl	(%r10,%r11,1),%edx
lea	0x782(%r10),%esi
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
mov	%rdx,%rax
movslq	%r10d,%r8
shl	$0x8,%rax
lea	(%r10,%r11,1),%rcx
lea	(%r10,%r11,1),%rax
movzwl	(%r10,%r11,1),%edx
lea	0x782(%r10),%esi
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
mov	%rdx,%rax
movslq	%r10d,%r8
shl	$0x8,%rax
lea	(%r10,%r11,1),%rcx
lea	(%r10,%r11,1),%rax
movzwl	(%r10,%r11,1),%edx
lea	0x782(%r10),%esi
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
mov	%rdx,%rax
movslq	%r10d,%r8
shl	$0x8,%rax
lea	(%r10,%r11,1),%rcx
lea	(%r10,%r11,1),%rax
movzwl	(%r10,%r11,1),%edx
lea	0x782(%r10),%esi
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
movzwl	(%r10,%r11,1),%edx
add	%rax,%rdx
addl	$0x1,(%r10,%r11,1)
	
	jmp start_loop_1         # jump to loop beginning
again:      
	inc %r9     
	cmp $1, %r9
	je loop_exit 
	mov $0, %rdi 
	jmp start_loop_1
loop_exit:
 	movl $1, %eax          #1 is the _exit() syscall
 	int $0x80

